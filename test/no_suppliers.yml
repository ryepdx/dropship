-
  In order to test supplier checking...
-
  Create a product to be dropshipped.
-
  !record {model: product.product, id: no_supplier_product}:
    name: "No Supplier Product"
    default_code: "NSP"
    categ_id: product.product_category_3
    list_price: 10.0
    standard_price: 5.0
    type: "consu"
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    description_sale: "No suppliers for this product."
    dropship: true
    procure_method: "make_to_order"
    supply_method: "buy"

-
  Create a sales order...
-
  !record {model: sale.order, id: test_sale_order3}:
    name: "Test SO"
    company_id: stock.res_company_2
    partner_id: partner_demo
    partner_invoice_id: partner_demo
    partner_shipping_id: partner_demo
    shop_id: sale.sale_shop_1
    pricelist_id: product.list0

-
  ...with a sales order line...
-
  !record {model: sale.order.line, id: test_sale_order3_line}:
    order_id: test_sale_order3
    name: "Dropshipped Product"
    product_id: no_supplier_product
    product_uom_qty: 1
    product_uos_qty: 1
    product_uom: product.product_uom_unit
    price_unit: 30.0
    type: "make_to_order"

-
  ...and make sure it fails due to no suppliers.
-
  !python {model: sale.order}: |
    from openerp.osv.orm import except_orm
    try:
      self.action_button_confirm(cr, uid, [ref('test_sale_order3')], context=context)
      assert False, "Dropshipped product with no suppliers sold without error!"
    except except_orm as e:
      assert "Product has no suppliers" in e[1], "'No suppliers' error was not raised!"